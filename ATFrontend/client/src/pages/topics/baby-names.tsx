import { Card, CardContent, CardHeader, CardTitle } from 'src/components/ui/card'; import { Badge } from 'src/components/ui/badge'; import { Button } from 'src/components/ui/button'; import { Baby, Star, Heart, Crown, Gift, Sparkles, BookOpen, Users } from 'lucide-react'; import AstroTickHeader from 'src/components/layout/AstroTickHeader'; import Footer from 'src/components/layout/Footer'; import { Link } from 'wouter'; export default function BabyNames() { const namingFactors = [ { icon: Star, title:"Nakshatra Based Names", description:"Names based on birth star for cosmic alignment and prosperity", color:"from-yellow-500 to-orange-500" }, { icon: Crown, title:"Rashi Name Selection", description:"Names according to moon sign for emotional harmony", color:"from-blue-500 to-indigo-500" }, { icon: Heart, title:"Numerology Matching", description:"Names with favorable numerology for life success", color:"from-pink-500 to-rose-500" }, { icon: BookOpen, title:"Sanskrit Meanings", description:"Traditional names with powerful meanings and blessings", color:"from-green-500 to-emerald-500" } ]; const nakshatraNames = [ { nakshatra:"Ashwini", syllables: ["Chu","Che","Cho","La"], sampleNames: ["Chetan","Charu","Lakshmi"] }, { nakshatra:"Bharani", syllables: ["Li","Lu","Le","Lo"], sampleNames: ["Lila","Luca","Leela"] }, { nakshatra:"Krittika", syllables: ["Aa","Ee","Oo","Ae"], sampleNames: ["Aarav","Ishaan","Usha"] }, { nakshatra:"Rohini", syllables: ["O","Va","Vi","Vu"], sampleNames: ["Om","Varun","Vihaan"] }, { nakshatra:"Mrigashirsha", syllables: ["Ve","Vo","Ka","Ki"], sampleNames: ["Vedant","Kavya","Kiran"] }, { nakshatra:"Ardra", syllables: ["Ku","Gha","Nga","Chha"], sampleNames: ["Kumar","Gagan","Nikhil"] }, { nakshatra:"Punarvasu", syllables: ["Ke","Ko","Ha","Hi"], sampleNames: ["Keshav","Harsh","Hiral"] }, { nakshatra:"Pushya", syllables: ["Hu","He","Ho","Da"], sampleNames: ["Harsh","Daksh","Divya"] }, { nakshatra:"Ashlesha", syllables: ["Di","Du","De","Do"], sampleNames: ["Diya","Dev","Dolly"] }, { nakshatra:"Magha", syllables: ["Ma","Mi","Mu","Me"], sampleNames: ["Manan","Meera","Mukti"] }, { nakshatra:"Purva Phalguni", syllables: ["Mo","Ta","Ti","Tu"], sampleNames: ["Mohit","Tanvi","Tulsi"] }, { nakshatra:"Uttara Phalguni", syllables: ["Te","To","Pa","Pi"], sampleNames: ["Tejas","Payal","Priya"] } ]; const babyNamingTips = [ { tip:"Choose names starting with birth nakshatra syllables", description:"This ensures cosmic alignment and positive energy flow" }, { tip:"Consider the numerology value of the complete name", description:"Total name value should be harmonious with birth date" }, { tip:"Select names with positive meanings", description:"Avoid names with negative or inauspicious meanings" }, { tip:"Check pronunciation and cultural appropriateness", description:"Ensure the name is easy to pronounce and culturally fitting" }, { tip:"Consider nicknames and shortened versions", description:"Think about how the name will be called in daily life" }, { tip:"Avoid names of deceased relatives", description:"This prevents karmic interference from ancestral energies" } ]; const genderSpecificGuidance = [ { gender:"Boys", characteristics: ["Strong consonants for leadership qualities","Names ending in 'a' for authority","Solar and martial influences","Names of deities and warriors" ], examples: ["Arjun","Vikram","Aditya","Rudra"] }, { gender:"Girls", characteristics: ["Soft vowels for nurturing nature","Names ending in 'i' or 'a' for grace","Lunar and venusian influences","Names of goddesses and nature" ], examples: ["Ananya","Kavya","Priya","Shreya"] } ]; return ( <> <AstroTickHeader /> <div className="min-h-screen bg-gradient-to-br from-yellow-50 via-orange-50 to-pink-50"> {/* Hero Section */} <div className="relative overflow-hidden"> <div className="absolute inset-0 bg-gradient-to-r from-yellow-600/20 to-orange-600/20"></div> <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20"> <div className="text-center"> <div className="mb-8"> <div className="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-yellow-500 to-orange-500 rounded-full mb-6 animate-pulse"> <Baby className="h-10 w-10 text-white" /> </div> </div> <h1 className="text-5xl md:text-6xl font-bold text-gray-900 mb-6"> Baby Name Calculator </h1> <p className="text-xl text-gray-600 mb-8 max-w-3xl mx-auto"> Find the perfect name for your baby using Vedic astrology, nakshatra calculations, and numerology for lifelong prosperity and happiness </p> <div className="flex flex-col sm:flex-row gap-4 justify-center"> <Link href="/baby-names"> <Button className="bg-gradient-to-r from-yellow-600 to-orange-600 text-white px-8 py-3 text-lg"> <Gift className="mr-2 h-5 w-5" /> Generate Baby Names </Button> </Link> <Link href="/astrologers"> <Button variant="outline" className="border-yellow-300 text-yellow-600 px-8 py-3 text-lg"> <Users className="mr-2 h-5 w-5" /> Expert Consultation </Button> </Link> </div> </div> </div> </div> {/* Main Content */} <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16"> {/* Naming Factors */} <div className="mb-16"> <h2 className="text-3xl font-bold text-gray-900 mb-8 text-center"> Vedic Baby Naming Factors </h2> <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6"> {namingFactors.map((factor, index) => ( <Card key={index} className="bg-white/80 backdrop-blur-sm shadow-xl border-0 hover:shadow-2xl transition-all duration-300 hover:scale-105"> <CardHeader className="text-center"> <div className={`inline-flex items-center justify-center w-12 h-12 bg-gradient-to-br ${factor.color} rounded-full mb-4 mx-auto`}> <factor.icon className="h-6 w-6 text-white" /> </div> <CardTitle className="text-lg font-semibold text-gray-900">{factor.title}</CardTitle> </CardHeader> <CardContent> <p className="text-gray-600 text-sm leading-relaxed">{factor.description}</p> </CardContent> </Card> ))} </div> </div> {/* Nakshatra Names */} <div className="mb-16"> <h2 className="text-3xl font-bold text-gray-900 mb-8 text-center"> Nakshatra-Based Name Syllables </h2> <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6"> {nakshatraNames.map((nakshatra, index) => ( <Card key={index} className="bg-white/80 backdrop-blur-sm shadow-xl border-0"> <CardHeader className="bg-gradient-to-r from-yellow-500 to-orange-500 text-white"> <CardTitle className="text-lg">{nakshatra.nakshatra}</CardTitle> </CardHeader> <CardContent className="p-6"> <div className="space-y-4"> <div> <h4 className="font-semibold text-gray-900 mb-2">Lucky Syllables:</h4> <div className="flex flex-wrap gap-1"> {nakshatra.syllables.map((syllable, idx) => ( <Badge key={idx} variant="secondary" className="text-xs"> {syllable} </Badge> ))} </div> </div> <div> <h4 className="font-semibold text-gray-900 mb-2">Sample Names:</h4> <div className="flex flex-wrap gap-1"> {nakshatra.sampleNames.map((name, idx) => ( <Badge key={idx} className="text-xs bg-yellow-100 text-yellow-800"> {name} </Badge> ))} </div> </div> </div> </CardContent> </Card> ))} </div> </div> {/* Gender-Specific Guidance */} <div className="mb-16"> <h2 className="text-3xl font-bold text-gray-900 mb-8 text-center"> Gender-Specific Naming Guidance </h2> <div className="grid md:grid-cols-2 gap-8"> {genderSpecificGuidance.map((guidance, index) => ( <Card key={index} className="bg-white/80 backdrop-blur-sm shadow-xl border-0"> <CardHeader className="bg-gradient-to-r from-yellow-500 to-orange-500 text-white"> <CardTitle className="text-xl">{guidance.gender} Names</CardTitle> </CardHeader> <CardContent className="p-6"> <div className="space-y-4"> <div> <h4 className="font-semibold text-gray-900 mb-3">Characteristics:</h4> <ul className="space-y-2"> {guidance.characteristics.map((char, idx) => ( <li key={idx} className="text-gray-600 text-sm flex items-center"> <span className="w-2 h-2 bg-yellow-500 rounded-full mr-2"></span> {char} </li> ))} </ul> </div> <div> <h4 className="font-semibold text-gray-900 mb-2">Popular Examples:</h4> <div className="flex flex-wrap gap-1"> {guidance.examples.map((name, idx) => ( <Badge key={idx} className="text-xs bg-orange-100 text-orange-800"> {name} </Badge> ))} </div> </div> </div> </CardContent> </Card> ))} </div> </div> {/* Naming Tips */} <div className="mb-16"> <h2 className="text-3xl font-bold text-gray-900 mb-8 text-center"> Expert Baby Naming Tips </h2> <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6"> {babyNamingTips.map((tip, index) => ( <Card key={index} className="bg-white/80 backdrop-blur-sm shadow-xl border-0"> <CardHeader> <div className="flex items-center gap-2"> <Star className="h-6 w-6 text-yellow-500" /> <CardTitle className="text-lg text-gray-900">{tip.tip}</CardTitle> </div> </CardHeader> <CardContent> <p className="text-gray-600 text-sm leading-relaxed">{tip.description}</p> </CardContent> </Card> ))} </div> </div> {/* Name Calculation Process */} <div className="mb-16"> <h2 className="text-3xl font-bold text-gray-900 mb-8 text-center"> How Our Name Calculator Works </h2> <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6"> <Card className="bg-white/80 backdrop-blur-sm shadow-xl border-0"> <CardHeader className="text-center"> <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-indigo-500 rounded-full flex items-center justify-center mx-auto mb-4"> <span className="text-white font-bold">1</span> </div> <CardTitle className="text-lg">Birth Details</CardTitle> </CardHeader> <CardContent> <p className="text-gray-600 text-sm">Enter baby's birth date, time, and location</p> </CardContent> </Card> <Card className="bg-white/80 backdrop-blur-sm shadow-xl border-0"> <CardHeader className="text-center"> <div className="w-12 h-12 bg-gradient-to-br from-green-500 to-emerald-500 rounded-full flex items-center justify-center mx-auto mb-4"> <span className="text-white font-bold">2</span> </div> <CardTitle className="text-lg">Nakshatra Calculation</CardTitle> </CardHeader> <CardContent> <p className="text-gray-600 text-sm">Calculate moon position and birth nakshatra</p> </CardContent> </Card> <Card className="bg-white/80 backdrop-blur-sm shadow-xl border-0"> <CardHeader className="text-center"> <div className="w-12 h-12 bg-gradient-to-br from-orange-500 to-amber-500 rounded-full flex items-center justify-center mx-auto mb-4"> <span className="text-white font-bold">3</span> </div> <CardTitle className="text-lg">Syllable Matching</CardTitle> </CardHeader> <CardContent> <p className="text-gray-600 text-sm">Generate names based on lucky syllables</p> </CardContent> </Card> <Card className="bg-white/80 backdrop-blur-sm shadow-xl border-0"> <CardHeader className="text-center"> <div className="w-12 h-12 bg-gradient-to-br from-red-500 to-orange-500 rounded-full flex items-center justify-center mx-auto mb-4"> <span className="text-white font-bold">4</span> </div> <CardTitle className="text-lg">Name Suggestions</CardTitle> </CardHeader> <CardContent> <p className="text-gray-600 text-sm">Receive personalized name recommendations</p> </CardContent> </Card> </div> </div> {/* Call to Action */} <div className="text-center"> <Card className="bg-gradient-to-r from-yellow-500 to-orange-500 text-white shadow-2xl"> <CardContent className="p-12"> <Sparkles className="h-12 w-12 mx-auto mb-6" /> <h3 className="text-3xl font-bold mb-4">Ready to Find the Perfect Name?</h3> <p className="text-xl mb-8 opacity-90"> Get personalized baby name suggestions based on Vedic astrology and numerology </p> <div className="flex flex-col sm:flex-row gap-4 justify-center"> <Link href="/baby-names"> <Button className="bg-white text-yellow-600 px-8 py-3 text-lg"> <Gift className="mr-2 h-5 w-5" /> Generate Names Now </Button> </Link> <Link href="/astrologers"> <Button variant="outline" className="border-white text-white px-8 py-3 text-lg"> <Crown className="mr-2 h-5 w-5" /> Expert Naming Consultation </Button> </Link> </div> </CardContent> </Card> </div> </div> </div> <Footer /> </> ); }