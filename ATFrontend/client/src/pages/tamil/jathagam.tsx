import { useState, useEffect } from "react";
import { Star, MapPin, Calendar, Clock, User } from "lucide-react";
import { motion } from "framer-motion";
import TamilBirthChartGenerator from "src/components/astrology/TamilBirthChartGenerator";
import { VedicBirthChart } from "src/lib/vedic-astrology";
import TamilHeader from 'src/components/layout/TamilHeader';
import Footer from 'src/components/layout/Footer';
import { Helmet } from "react-helmet-async";
import { useLocation } from 'wouter';

interface BirthData {
  name?: string;
  birthDate?: string;
  birthTime?: string;
  birthPlace?: string;
  gender?: string;
}

const TamilJathagam = () => {
  const [location] = useLocation();
  const [generatedChart, setGeneratedChart] = useState<VedicBirthChart | null>(null);
  const [initialBirthData, setInitialBirthData] = useState<BirthData | null>(null);

  useEffect(() => {
    if (typeof window !== 'undefined' && window.gtag) {
      window.gtag('config', import.meta.env.VITE_GA_MEASUREMENT_ID, {
        page_path: location
      });
    }
  }, [location]);

  const handleChartGenerated = (chart: VedicBirthChart) => {
    setGeneratedChart(chart);
  };

  // Extract birth data from URL parameters
  useEffect(() => {
    const urlParams = new URLSearchParams(window.location.search);
    const name = urlParams.get('name');
    const date = urlParams.get('date');
    const time = urlParams.get('time');
    const location = urlParams.get('location');
    const gender = urlParams.get('gender');
    const latitude = urlParams.get('latitude');
    const longitude = urlParams.get('longitude');

    if (name && date && time && location && latitude && longitude) {
      const birthData = {
        name,
        birthDate: date,
        birthTime: decodeURIComponent(time),
        birthPlace: decodeURIComponent(location),
        gender: gender || 'male',
        latitude: parseFloat(latitude),
        longitude: parseFloat(longitude)
      };
      
      setInitialBirthData(birthData);
    }
  }, []);

  return (
    <>
      <Helmet>
        <title>роЗро▓ро╡роЪ роЬро╛родроХроорпН | Free Tamil Kundli Online - AstroTick</title>
        <meta name="description" content="роЗро▓ро╡роЪрооро╛роХ родрооро┐ро┤ро┐ро▓рпН роЬро╛родроХроорпН рокро╛ро░рпНроХрпНроХро╡рпБроорпН. роХро┐ро░роХ роиро┐ро▓рпИроХро│рпН, родроЪро╛ роХро╛ро▓роЩрпНроХро│рпН, ропрпЛроХроЩрпНроХро│рпН роЕройрпИродрпНродрпБроорпН родрооро┐ро┤ро┐ро▓рпН. родрпБро▓рпНро▓ро┐ропрооро╛рой ро╡рпЗрод роЬрпЛродро┐роЯ роХрогро┐рокрпНрокрпБроХро│рпН." />
        <meta property="og:title" content="роЗро▓ро╡роЪ роЬро╛родроХроорпН | Free Tamil Kundli Online - AstroTick" />
        <meta property="og:description" content="роЗро▓ро╡роЪрооро╛роХ родрооро┐ро┤ро┐ро▓рпН роЬро╛родроХроорпН рокро╛ро░рпНроХрпНроХро╡рпБроорпН. роХро┐ро░роХ роиро┐ро▓рпИроХро│рпН, родроЪро╛ роХро╛ро▓роЩрпНроХро│рпН, ропрпЛроХроЩрпНроХро│рпН роЕройрпИродрпНродрпБроорпН родрооро┐ро┤ро┐ро▓рпН. родрпБро▓рпНро▓ро┐ропрооро╛рой ро╡рпЗрод роЬрпЛродро┐роЯ роХрогро┐рокрпНрокрпБроХро│рпН." />
        <meta property="og:url" content={`https://astrotick.com${location}`} />
        <meta name="keywords" content="родрооро┐ро┤рпН роЬро╛родроХроорпН, роЬро╛родроХ роХроЯрпНроЯроорпН, ро░ро╛роЪро┐ роЪроХрпНроХро░роорпН, роХро┐ро░роХ роиро┐ро▓рпИроХро│рпН, родроЪро╛ рокрпБроХрпНродро┐, ро╡рпЗрод роЬрпЛродро┐роЯроорпН, Tamil kundli, horoscope" />
        <meta name="robots" content="index, follow" />
        <meta name="language" content="Tamil" />
        <link rel="canonical" href={`https://astrotick.com${location}`} />
        <link rel="icon" type="image/x-icon" href="/favicon.ico" />
        
        {/* Schema */}
        <script type="application/ld+json">
          {JSON.stringify({
            "@context": "https://schema.org",
            "@type": "WebApplication",
            "name": "Tamil Kundli Generator",
            "description": "Free Tamil Vedic birth chart generator with detailed astrological analysis in Tamil",
            "url": "https://astrotick.com/tamil/kundli",
            "applicationCategory": "Lifestyle",
            "inLanguage": "ta"
          })}
        </script>
      </Helmet>
      
      <TamilHeader />
      <div className="min-h-screen bg-gradient-to-br from-orange-50 via-amber-50 to-yellow-50 relative overflow-hidden">
        {/* Animated Background Elements */}
        <div className="absolute inset-0 opacity-15">
          <div className="absolute top-20 left-20 w-32 h-32 bg-gradient-to-r from-orange-200 to-amber-200 rounded-full animate-pulse"></div>
          <div className="absolute top-40 right-20 w-24 h-24 bg-gradient-to-r from-yellow-200 to-orange-200 rounded-full animate-bounce"></div>
          <div className="absolute bottom-20 left-40 w-20 h-20 bg-gradient-to-r from-amber-200 to-yellow-200 rounded-full animate-pulse"></div>
          <div className="absolute bottom-40 right-40 w-28 h-28 bg-gradient-to-r from-orange-200 to-red-200 rounded-full animate-bounce"></div>
        </div>
        
        <div className="container mx-auto px-4 py-4 relative z-10">
          <motion.div 
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="text-center mb-6"
          >
            <div className="mb-6">
              <div className="inline-flex items-center gap-2 px-4 py-2 bg-white/80 backdrop-blur-sm rounded-full border border-orange-200 shadow-sm">
                <span className="text-green-600 text-sm">тЧП</span>
                <span className="text-orange-800 text-sm font-medium">роЙрогрпНроорпИропро╛рой ро╡рпЗрод роЬрпЛродро┐роЯ роХрогро┐рокрпНрокрпБроХро│рпН</span>
              </div>
            </div>
            <h1 className="text-4xl md:text-6xl font-bold text-orange-900 mb-6 leading-tight">
              роЙроЩрпНроХро│рпН роЗро▓ро╡роЪ
              <span className="bg-gradient-to-r from-orange-600 to-red-600 bg-clip-text text-transparent"> роЬро╛родроХроорпН</span>
            </h1>
            <p className="text-xl text-orange-800 max-w-4xl mx-auto leading-relaxed">
              родрпБро▓рпНро▓ро┐ропрооро╛рой роХро┐ро░роХ роиро┐ро▓рпИроХро│рпН, родроЪро╛ роХро╛ро▓роЩрпНроХро│рпН рооро▒рпНро▒рпБроорпН роЬрпЛродро┐роЯ рокроХрпБрокрпНрокро╛ропрпНро╡рпБроХро│рпБроЯройрпН 
              роЙроЩрпНроХро│рпН роЙрогрпНроорпИропро╛рой ро╡рпЗрод роЬро╛родроХродрпНродрпИ роЙро░рпБро╡ро╛роХрпНроХрпБроЩрпНроХро│рпН. роЙроЩрпНроХро│рпН ро╡ро┐рогрпНроорогрпНроЯро▓ ро╡ро░рпИрокроЯродрпНродрпИ роХрогрпНроЯро▒ро┐ропрпБроЩрпНроХро│рпН.
            </p>
            
            {/* Trust Indicators in Tamil */}
            <div className="flex flex-wrap justify-center gap-8 mt-8">
              <motion.div 
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6, delay: 0.2 }}
                className="flex items-center gap-2 text-orange-700"
              >
                <span className="text-2xl">тнР</span>
                <span className="text-sm font-medium">50,000+ роЬро╛родроХроЩрпНроХро│рпН родропро╛ро░ро┐роХрпНроХрокрпНрокроЯрпНроЯрпБро│рпНро│рой</span>
              </motion.div>
              <motion.div 
                initial={{ opacity: 0, x: 0 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6, delay: 0.4 }}
                className="flex items-center gap-2 text-orange-700"
              >
                <span className="text-2xl">ЁЯОп</span>
                <span className="text-sm font-medium">100% родрпБро▓рпНро▓ро┐ропрооро╛рой роХрогро┐рокрпНрокрпБроХро│рпН</span>
              </motion.div>
              <motion.div 
                initial={{ opacity: 0, x: 20 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6, delay: 0.6 }}
                className="flex items-center gap-2 text-orange-700"
              >
                <span className="text-2xl">ЁЯФо</span>
                <span className="text-sm font-medium">рокро╛ро░роорпНрокро░ро┐роп ро╡рпЗрод роорпБро▒рпИроХро│рпН</span>
              </motion.div>
            </div>
          </motion.div>

          {/* Tamil Features Grid */}
          <motion.div 
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.4 }}
            className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-12 max-w-5xl mx-auto"
          >
            {[
              { icon: <User className="h-6 w-6" />, title: "родройро┐рокрпНрокроЯрпНроЯ ро╡ро┐ро╡ро░роЩрпНроХро│рпН", desc: "рокрпЖропро░рпН, рокро┐ро▒роирпНрод родрпЗродро┐ рооро▒рпНро▒рпБроорпН роирпЗро░роорпН" },
              { icon: <MapPin className="h-6 w-6" />, title: "рокро┐ро▒роирпНрод роЗроЯроорпН", desc: "родрпБро▓рпНро▓ро┐ропрооро╛рой роЕроЯрпНроЪро╛роЩрпНроЪроорпН рооро▒рпНро▒рпБроорпН родрпАро░рпНроХрпНроХро╛роЩрпНроЪроорпН" },
              { icon: <Calendar className="h-6 w-6" />, title: "ро░ро╛роЪро┐ роЪроХрпНроХро░роорпН", desc: "12 ро░ро╛роЪро┐роХро│ро┐ро▓рпН роХро┐ро░роХ роиро┐ро▓рпИроХро│рпН" },
              { icon: <Clock className="h-6 w-6" />, title: "родроЪро╛ рокрпБроХрпНродро┐", desc: "ро╡ро╛ро┤рпНроиро╛ро│рпН роорпБро┤рпБро╡родрпБроорпН роХро┐ро░роХ роХро╛ро▓роЩрпНроХро│рпН" }
            ].map((feature, index) => (
              <div key={index} className="bg-white/90 backdrop-blur-sm border border-orange-200 rounded-lg p-4 text-center shadow-md hover:shadow-lg transition-shadow">
                <div className="w-12 h-12 bg-gradient-to-br from-orange-500 to-red-500 rounded-full flex items-center justify-center text-white mx-auto mb-3">
                  {feature.icon}
                </div>
                <h3 className="font-semibold text-orange-900 mb-1">{feature.title}</h3>
                <p className="text-sm text-orange-700">{feature.desc}</p>
              </div>
            ))}
          </motion.div>

          {/* Birth Chart Generator */}
          <motion.div 
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.6 }}
            className="max-w-6xl mx-auto"
          >
            <TamilBirthChartGenerator 
              onChartGenerated={handleChartGenerated} 
              initialData={initialBirthData}
            />
          </motion.div>
          
          {/* Tamil Testimonials Section */}
          <motion.div 
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.8 }}
            className="max-w-4xl mx-auto mt-16 mb-12"
          >
            <div className="text-center mb-8">
              <h2 className="text-3xl font-bold text-orange-900 mb-4">роОроЩрпНроХро│рпН рокропройро╛ро│ро░рпНроХро│рпН роХрпВро▒рпБро╡родрпБ</h2>
              <p className="text-orange-700">роОроЩрпНроХро│рпН роЙрогрпНроорпИропро╛рой ро╡рпЗрод роЬрпЛродро┐роЯродрпНродрпИ роироорпНрокрпБроорпН роЖропро┐ро░роХрпНроХрогроХрпНроХро╛рой родро┐ро░рпБрокрпНродро┐ропро╛рой рокропройро╛ро│ро░рпНроХро│рпБроЯройрпН роЪрпЗро░рпБроЩрпНроХро│рпН</p>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              {[
                {
                  name: "рокрпНро░ро┐ропро╛ роЪро░рпНрооро╛",
                  rating: 5,
                  text: "роЕро▒рпНрокрпБродрооро╛рой родрпБро▓рпНро▓ро┐ропроорпН! роЗро▓ро╡роЪ роЬро╛родроХроорпН роОройроХрпНроХрпБ рооро┐роХро╡рпБроорпН ро╡ро┐ро░ро┐ро╡ро╛рой роирпБрогрпНрогро▒ро┐ро╡рпБроХро│рпИ роЕро│ро┐родрпНродродрпБ. роЙроЯройрпЗ рокро┐ро░рпАрооро┐ропроорпН ро░ро┐рокрпНрокрпЛро░рпНроЯрпН ро╡ро╛роЩрпНроХро┐ройрпЗройрпН, роЕродрпБ роТро╡рпНро╡рпКро░рпБ роХро╛роЪрпБроХрпНроХрпБроорпН роородро┐рокрпНрокрпБ.",
                  location: "роЪрпЖройрпНройрпИ"
                },
                {
                  name: "ро░ро╛роЬрпЗро╖рпН роХрпБрооро╛ро░рпН",
                  rating: 5,
                  text: "роиро╛ройрпН рокро▓ роЬрпЛродро┐роЯ родро│роЩрпНроХро│рпИ роорпБропро▒рпНроЪро┐родрпНродрпЗройрпН роЖройро╛ро▓рпН роЗродрпБ ро╡рпЗро▒рпБрокроЯрпНроЯродрпБ. роХрогро┐рокрпНрокрпБроХро│рпН роЙрогрпНроорпИропро╛ройро╡рпИ рооро▒рпНро▒рпБроорпН рокро┐ро░рпАрооро┐ропроорпН ро░ро┐рокрпНрокрпЛро░рпНроЯрпН роОройродрпБ родрпКро┤ро┐ро▓рпН роорпБроЯро┐ро╡рпБроХро│рпБроХрпНроХрпБ роЙродро╡ро┐ропродрпБ.",
                  location: "роХрпЛропроорпНрокрпБродрпНродрпВро░рпН"
                },
                {
                  name: "роорпАро░ро╛ рокроЯрпНроЯрпЗро▓рпН",
                  rating: 5,
                  text: "родро┐ро░рпБроорог рокрпКро░рпБродрпНрод рокроХрпБрокрпНрокро╛ропрпНро╡рпБ рооро┐роХро╡рпБроорпН роЪро░ро┐ропро╛роХ роЗро░рпБроирпНродродрпБ. ро╡ро┐ро░ро┐ро╡ро╛рой ро░ро┐рокрпНрокрпЛро░рпНроЯрпН роОроЩрпНроХро│рпН роЙро▒ро╡ро┐ро▓рпН роироорпНрокро┐роХрпНроХрпИропрпИ роЕро│ро┐родрпНродродрпБ. рооро┐роХро╡рпБроорпН рокро░ро┐роирпНродрпБро░рпИроХрпНроХро┐ро▒рпЗройрпН!",
                  location: "рокрпЖроЩрпНроХро│рпВро░рпБ"
                }
              ].map((testimonial, index) => (
                <div key={index} className="bg-white/90 backdrop-blur-sm border border-orange-200 rounded-lg p-6 shadow-md">
                  <div className="flex items-center gap-1 mb-3">
                    {[...Array(testimonial.rating)].map((_, i) => (
                      <Star key={i} className="h-4 w-4 text-yellow-500 fill-current" />
                    ))}
                  </div>
                  <p className="text-gray-800 mb-4 italic">"{testimonial.text}"</p>
                  <div className="flex items-center gap-3">
                    <div className="w-10 h-10 bg-gradient-to-br from-orange-500 to-red-500 rounded-full flex items-center justify-center">
                      <span className="text-white font-semibold text-sm">
                        {testimonial.name.split(' ').map(n => n[0]).join('')}
                      </span>
                    </div>
                    <div>
                      <div className="font-semibold text-gray-900">{testimonial.name}</div>
                      <div className="text-sm text-gray-600">{testimonial.location}</div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </motion.div>

          {/* Tamil Benefits Section */}
          <motion.div 
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 1.0 }}
            className="max-w-5xl mx-auto mt-16 mb-12"
          >
            <div className="text-center mb-8">
              <h2 className="text-3xl font-bold text-orange-900 mb-4">роЬро╛родроХродрпНродро┐ройрпН роиройрпНроорпИроХро│рпН</h2>
              <p className="text-orange-700">роЙроЩрпНроХро│рпН ро╡рпЗрод роЬро╛родроХроорпН роЙроЩрпНроХро│рпБроХрпНроХрпБ роОро╡рпНро╡ро╛ро▒рпБ роЙродро╡рпБроорпН</p>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              {[
                { title: "ро╡ро╛ро┤рпНроХрпНроХрпИ роирпЛроХрпНроХроорпН", desc: "роЙроЩрпНроХро│рпН ро╡ро╛ро┤рпНроХрпНроХрпИропро┐ройрпН роЙрогрпНроорпИропро╛рой роирпЛроХрпНроХродрпНродрпИ роХрогрпНроЯро▒ро┐ропрпБроЩрпНроХро│рпН", icon: "ЁЯОп" },
                { title: "родрпКро┤ро┐ро▓рпН ро╡ро┤ро┐роХро╛роЯрпНроЯрпБродро▓рпН", desc: "роЪро░ро┐ропро╛рой родрпКро┤ро┐ро▓рпН рокро╛родрпИропрпИ родрпЗро░рпНроирпНродрпЖроЯрпБроЩрпНроХро│рпН", icon: "ЁЯТ╝" },
                { title: "роЙро▒ро╡рпБроХро│рпН", desc: "родро┐ро░рпБроорогроорпН рооро▒рпНро▒рпБроорпН роХрпВроЯрпНроЯро╛рогрпНроорпИ рокрпКро░рпБродрпНродроорпН", icon: "ЁЯТХ" },
                { title: "роЖро░рпЛроХрпНроХро┐ропроорпН", desc: "роЖро░рпЛроХрпНроХро┐роп рокро┐ро░роЪрпНроЪройрпИроХро│рпН рооро▒рпНро▒рпБроорпН родрпАро░рпНро╡рпБроХро│рпН", icon: "ЁЯПе" },
                { title: "роЪрпЖро▓рпНро╡роорпН", desc: "рокрогроорпН рооро▒рпНро▒рпБроорпН роорпБродро▓рпАроЯрпБ роЕро▒ро┐ро╡рпБро░рпИроХро│рпН", icon: "ЁЯТ░" },
                { title: "роХро▓рпНро╡ро┐", desc: "рокроЯро┐рокрпНрокрпБ рооро▒рпНро▒рпБроорпН роЕро▒ро┐ро╡рпБ рокрпЖро▒рпБродро▓рпН", icon: "ЁЯУЪ" },
                { title: "роХрпБроЯрпБроорпНрокроорпН", desc: "роХрпБроЯрпБроорпНрок роЙро▒ро╡рпБроХро│рпН рооро▒рпНро▒рпБроорпН рокро┐ро│рпНро│рпИроХро│рпН", icon: "ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж" },
                { title: "роЖройрпНроорпАроХроорпН", desc: "роЖройрпНроорпАроХ ро╡ро│ро░рпНроЪрпНроЪро┐ рооро▒рпНро▒рпБроорпН роорпЛроЯрпНроЪроорпН", icon: "ЁЯХЙя╕П" }
              ].map((benefit, index) => (
                <div key={index} className="bg-white/90 backdrop-blur-sm border border-orange-200 rounded-lg p-4 text-center shadow-md hover:shadow-lg transition-shadow">
                  <div className="text-3xl mb-3">{benefit.icon}</div>
                  <h3 className="font-semibold text-orange-900 mb-2">{benefit.title}</h3>
                  <p className="text-sm text-orange-700">{benefit.desc}</p>
                </div>
              ))}
            </div>
          </motion.div>
        </div>
      </div>
      <Footer />
    </>
  );
};

export default TamilJathagam;
